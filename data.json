
public static void mergeDocxToPdf(List<DocumentModel> documents, String outputPdf) throws Exception {
    List<String> pdfFiles = new ArrayList<>();

    // Step 1: Convert each DOCX to a temporary PDF
    for (DocumentModel doc : documents) {
        byte[] decodedBytes = Base64.getDecoder().decode(doc.getFileContent());
        try (InputStream is = new ByteArrayInputStream(decodedBytes);
             XWPFDocument wordDoc = new XWPFDocument(is)) {

            String pdfPath = "temp_" + UUID.randomUUID() + ".pdf";
            convertDocxToPdf(wordDoc, pdfPath);
            pdfFiles.add(pdfPath);
        }
    }

    // Step 2: Merge PDFs using PDFBox
    mergePdfsWithPdfBox(pdfFiles, outputPdf);

    // Step 3: Cleanup temp PDF files
    pdfFiles.forEach(file -> new File(file).delete());
}

private static void convertDocxToPdf(XWPFDocument docx, String outputPdf) throws Exception {
    try (PDDocument pdfDocument = new PDDocument()) {
        PDPage page = new PDPage();
        pdfDocument.addPage(page);

        PDPageContentStream contentStream = new PDPageContentStream(pdfDocument, page);
        contentStream.beginText();
        contentStream.setFont(PDType1Font.HELVETICA, 12);
        contentStream.newLineAtOffset(50, 700);

        // Extract paragraphs from DOCX and write to PDF
        for (XWPFParagraph para : docx.getParagraphs()) {
            contentStream.showText(para.getText());
            contentStream.newLineAtOffset(0, -15);
        }

        contentStream.endText();
        contentStream.close();

        pdfDocument.save(outputPdf);
    }
}

private static void mergePdfsWithPdfBox(List<String> pdfFiles, String outputPdf) throws IOException {
    PDFMergerUtility merger = new PDFMergerUtility();
    merger.setDestinationFileName(outputPdf);

    for (String pdfFile : pdfFiles) {
        merger.addSource(pdfFile);
    }

    merger.mergeDocuments(null);
}

<dependencies>
    <!-- Apache POI for handling Word documents -->
    <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>5.2.3</version>
    </dependency>

    <!-- iText for PDF conversion and merging -->
    <dependency>
        <groupId>com.itextpdf</groupId>
        <artifactId>itext7-core</artifactId>
        <version>7.2.5</version>
    </dependency>

    <!-- PDFBox (Alternative PDF manipulation library, optional) -->
    <dependency>
        <groupId>org.apache.pdfbox</groupId>
        <artifactId>pdfbox</artifactId>
        <version>2.0.29</version>
    </dependency>
</dependencies>
