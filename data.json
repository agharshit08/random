public static List<TemplateDetails> processTemplates(List<TemplateDetails> templates) {
    return templates.stream()
        // First group by name
        .collect(Collectors.groupingBy(TemplateDetails::getName))
        .values()
        .stream()
        .map(templatesForName -> {
            // Find highest templateVersion for this name
            Long maxTemplateVersion = templatesForName.stream()
                .map(TemplateDetails::getTemplateVersion)
                .max(Long::compareTo)
                .orElse(0L);
            
            // Filter to only entries with highest templateVersion and latest=true
            return templatesForName.stream()
                .filter(t -> t.getTemplateVersion().equals(maxTemplateVersion))
                .filter(TemplateDetails::isLatest)
                .findFirst()
                .orElse(null);
        })
        .filter(Objects::nonNull)
        .collect(Collectors.toList());
}