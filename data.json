import org.apache.poi.hwpf.HWPFDocument;
import org.apache.poi.hwpf.extractor.WordExtractor;
import org.apache.poi.xwpf.usermodel.*;

import java.io.*;
import java.util.Base64;
import java.util.List;

class Document {
    private String fileName;
    private String base64Content; // Base64 encoded content

    public Document(String fileName, String base64Content) {
        this.fileName = fileName;
        this.base64Content = base64Content;
    }

    public String getFileName() {
        return fileName;
    }

    public byte[] getDecodedContent() {
        return Base64.getDecoder().decode(base64Content);
    }
}

public class MergeDocuments {
    public static void main(String[] args) throws Exception {
        // Example: List of Base64-encoded documents
        List<Document> documents = List.of(
            new Document("file1.docx", "BASE64_ENCODED_STRING_1"),
            new Document("file2.doc", "BASE64_ENCODED_STRING_2")
        );

        byte[] mergedDoc = mergeDocuments(documents);
        try (FileOutputStream fos = new FileOutputStream("merged_document.docx")) {
            fos.write(mergedDoc);
        }
        System.out.println("Merged document saved as merged_document.docx");
    }

    public static byte[] mergeDocuments(List<Document> documents) throws Exception {
        XWPFDocument mergedDoc = new XWPFDocument();

        for (Document doc : documents) {
            byte[] decodedBytes = doc.getDecodedContent();
            try (ByteArrayInputStream bais = new ByteArrayInputStream(decodedBytes)) {
                if (doc.getFileName().endsWith(".docx")) {
                    appendDocx(mergedDoc, new XWPFDocument(bais));
                } else if (doc.getFileName().endsWith(".doc")) {
                    appendDoc(mergedDoc, new HWPFDocument(bais));
                }
            }
        }

        try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {
            mergedDoc.write(baos);
            return baos.toByteArray();
        }
    }

    private static void appendDocx(XWPFDocument mergedDoc, XWPFDocument docToMerge) {
        for (XWPFParagraph p : docToMerge.getParagraphs()) {
            XWPFParagraph newPara = mergedDoc.createParagraph();
            newPara.setAlignment(p.getAlignment());
            XWPFRun newRun = newPara.createRun();
            for (XWPFRun run : p.getRuns()) {
                newRun.setText(run.getText(0), 0);
                newRun.setBold(run.isBold());
                newRun.setItalic(run.isItalic());
                newRun.setFontSize(run.getFontSize());
            }
        }
    }

    private static void appendDoc(XWPFDocument mergedDoc, HWPFDocument docToMerge) {
        WordExtractor extractor = new WordExtractor(docToMerge);
        String text = extractor.getText();
        XWPFParagraph para = mergedDoc.createParagraph();
        XWPFRun run = para.createRun();
        run.setText(text);
    }
}
