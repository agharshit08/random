import org.apache.poi.xwpf.usermodel.XWPFDocument;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.*;
import org.apache.poi.xwpf.usermodel.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.Base64;
import java.util.List;
import java.io.IOException;

public static String writeMergedPdfToResources(byte[] pdfContent) throws IOException {
    // Get the project's resources directory
    String resourcePath = "src/main/resources";
    
    // Create a directory for merged documents if it doesn't exist
    Path mergedDocsDir = Paths.get(resourcePath, "merged-documents");
    if (!Files.exists(mergedDocsDir)) {
        Files.createDirectories(mergedDocsDir);
    }
    
    // Generate unique filename with timestamp
    String timestamp = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss"));
    String fileName = "merged_document_" + timestamp + ".pdf";
    
    // Create the full file path
    Path filePath = mergedDocsDir.resolve(fileName);
    
    // Write the PDF content to file
    try (FileOutputStream fos = new FileOutputStream(filePath.toFile())) {
        fos.write(pdfContent);
    }
    
    return filePath.toString();
}