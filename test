# EditorConfig for custom Java formatting

root = true

[*]
end_of_line = lf
insert_final_newline = true
indent_style = space
indent_size = 2
tab_width = 2
max_line_length = 100
trim_trailing_whitespace = true

[*.java]
# Java-specific configuration for braces and indentation
brace_style = 1tbs
indent_size = 2
tab_width = 2

# Align the closing brace at the start of the operator
ij_java_align_multiline_method_chain = true

# Set wrapping for chained method calls
ij_java_call_parameters_wrap = wrap_if_long
ij_java_call_parameters_lbrace_on_next_line = true
ij_java_call_parameters_rbrace_on_next_line = true

# Set wrapping for lambda expressions
ij_java_lambda_wrap = wrap_if_long
ij_java_lambda_lbrace_on_next_line = true
ij_java_lambda_rbrace_on_next_line = true

# Align method call arguments when multiline
ij_java_align_multiline_parameters_in_calls = true
ij_java_align_multiline_chained_methods = true

# Wrapping settings for chained method calls and lambda expressions
ij_java_method_call_chain_wrap = true


public class StringHelper {
    public static String extractParameter(String input) {
        // Regular expression to match {{param}}
        String regex = "\\{\\{(.*?)\\}\\}";
        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(regex);
        java.util.regex.Matcher matcher = pattern.matcher(input);

        // Check if the pattern matches
        if (matcher.find()) {
            return matcher.group(1); // Return the captured group (the parameter)
        } else {
            return null; // Return null if no match is found
        }
    }

    public static void main(String[] args) {
        String input = "{{param}}";
        String extractedParam = extractParameter(input);
        System.out.println(extractedParam); // Output: param
    }
}



"application/vnd.openxmlformats-officedocument.wordprocessingml.document", content